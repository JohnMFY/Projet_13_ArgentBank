openapi: 3.0.0
info:
  title: ARGENT BANK
  description: |-
    ARGENT BANK is a bank application.  
    For the moment, only the user part of the API is documented and managed.  
    In the future we will have the transaction part.
  version: 1.0.0
servers:
  - url: http://localhost:3001/api/v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: User
  - name: Transaction
paths:
  /user/login:
    post:
      tags:
        - User
      summary: Sign in (to get token)
      description: >
        Authenticate a user by email and password.  
        Returns a JWT token if login is successful.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                email: tony@stark.com
                password: password123
      responses:
        '200':
          description: User successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: User successfully logged in
                  body:
                    type: object
                    properties:
                      token:
                        type: string
                        example: token
  /user/profile:
    post:
      tags:
        - User
      summary: Get user profile (with token)
      description: >
        Retrieve the authenticated user's profile.  
        Requires a valid JWT token in the `Authorization` header.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved user profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Successfully got user profile data
                  body:
                    type: object
                    properties:
                      email:
                        type: string
                        example: tony@stark.com
                      firstName:
                        type: string
                        example: Tony
                      lastName:
                        type: string
                        example: Stark
                      createdAt:
                        type: string
                        format: date-time
                        example: 2025-07-24T12:58:48.485Z
                      updatedAt:
                        type: string
                        format: date-time
                        example: 2025-09-04T15:06:41.975Z
                      id:
                        type: string
                        example: 68822e08ce3e08259cf4f30b

    put:
      tags:
        - User
      summary: Change userName (with Token)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: John
                lastName: Doe
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /transactions:
    get:
      tags:
        - Transaction
      summary: Get all transactions for the current month
      description: >
        Retrieve all transactions for the authenticated user, grouped by account.
        Requires a valid JWT token in the `Authorization` header.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: month
          schema:
            type: string
            example: "2025-09"
          description: Month (YYYY-MM) to filter transactions (optional, defaults to current month).
      responses:
        '200':
          description: Successfully retrieved transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Successfully retrieved transactions
                  body:
                    type: array
                    items:
                      type: object
                      properties:
                        accountId:
                          type: string
                          example: x8349
                        transactions:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                example: tr_12345
                              date:
                                type: string
                                format: date-time
                                example: 2025-09-01T10:00:00Z
                              description:
                                type: string
                                example: Golden Sun Bakery
                              amount:
                                type: number
                                example: 20.0
                              balance:
                                type: number
                                example: 2087.79
                              type:
                                type: string
                                example: Electronic
                              category:
                                type: string
                                example: Food
                              notes:
                                type: string
                                example: Birthday cake

  /transactions/{transactionId}:
    get:
      tags:
        - Transaction
      summary: Get transaction details
      description: >
        Retrieve the details of a specific transaction.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: transactionId
          required: true
          schema:
            type: string
          description: ID of the transaction to retrieve
      responses:
        '200':
          description: Successfully retrieved transaction details
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Transaction details retrieved
                  body:
                    type: object
                    properties:
                      id:
                        type: string
                        example: tr_12345
                      date:
                        type: string
                        format: date-time
                        example: 2025-09-01T10:00:00Z
                      description:
                        type: string
                        example: Golden Sun Bakery
                      amount:
                        type: number
                        example: 20.0
                      balance:
                        type: number
                        example: 2087.79
                      type:
                        type: string
                        example: Electronic
                      category:
                        type: string
                        example: Food
                      notes:
                        type: string
                        example: Birthday cake
        '404':
          description: Transaction not found

    put:
      tags:
        - Transaction
      summary: Update a transaction
      description: >
        Update information about a transaction (category, notes, etc.).
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: transactionId
          required: true
          schema:
            type: string
          description: ID of the transaction to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                  example: Food
                notes:
                  type: string
                  example: Paid for client meeting
      responses:
        '200':
          description: Transaction successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Transaction updated successfully
        '404':
          description: Transaction not found

    delete:
      tags:
        - Transaction
      summary: Delete a transaction
      description: >
        Delete a transaction from the account.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: transactionId
          required: true
          schema:
            type: string
          description: ID of the transaction to delete
      responses:
        '200':
          description: Transaction successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Transaction deleted successfully
        '404':
          description: Transaction not found