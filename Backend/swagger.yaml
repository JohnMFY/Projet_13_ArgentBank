openapi: 3.0.0
info:
  title: ARGENT BANK
  description: |-
    ARGENT BANK is a bank application.  
    For the moment, only the user part of the API is documented and managed.  
    In the future we will have the transaction part.
  version: 1.0.0
servers:
  - url: http://localhost:3001/api/v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: User
  - name: Transaction
paths:
  /user/login:
    post:
      tags:
        - User
      summary: Sign in (to get token)
      description: |-
        Authenticate a user with email and password.  
        Returns a token if login is successful.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                email: tony@stark.com
                password: password123
      responses:
        '200':
          description: User successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: User successfully logged in
                  body:
                    type: object
                    properties:
                      token:
                        type: string
                        example: token
        '404':
          description: User not found
  /user/profile:
    post:
      tags:
        - User
      summary: Get user profile (with token)
      description: |-
        Requires token in Auth Type, Bearer Token.
        
        Get user profile data.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved user profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Successfully got user profile data
                  body:
                    type: object
                    properties:
                      email:
                        type: string
                        example: tony@stark.com
                      firstName:
                        type: string
                        example: Tony
                      lastName:
                        type: string
                        example: Stark
                      createdAt:
                        type: string
                        format: date-time
                        example: 2025-07-24T12:58:48.485Z
                      updatedAt:
                        type: string
                        format: date-time
                        example: 2025-09-04T15:06:41.975Z
                      id:
                        type: string
                        example: id
        '404':
          description: User data not found

    put:
      tags:
        - User
      summary: Change userName (with Token)
      description: |-
        Requires token in Auth Type, Bearer Token and a body with first name and last name.
        
        Change user first name and  last name.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: John
                lastName: Doe
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
        '404':
          description: Not able to update first name and last name

  /transactions:
    get:
      tags:
        - Transaction
      summary: Get all transactions (current month)
      description: |-
        Get the transactions for the user connected, grouped by account.
        
        Requires token in Auth Type, Bearer Token and the current date
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: month
          schema:
            type: string
            example: current
          description: month=current
      responses:
        '200':
          description: get transactions of the month OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    accountId:
                      type: string
                      example: x8349
                    transactions:
                      type: array
                      items:
                        type: object
                        properties:
                          date:
                            type: string
                            format: date-time
                            example: 2025-09-04T15:06:41.975Z
                          description:
                            type: string
                            example: Golden Sun Bakery
                          amount:
                            type: number
                            example: 5
                          balance:
                            type: number
                            example: 2000
              example:
                - accountId: x8349
                  transactions:
                    - transactionId: id
                      date: 2025-09-04T15:06:41.975Z
                      description: Golden Sun Bakery
                      amount: 5
                      balance: 2000
                    - transactionId: id
                      date: 2025-09-04T15:06:41.975Z
                      description: Golden Sun Bakery
                      amount: 10
                      balance: 3000
                    - transactionId: id
                      date: 2025-09-04T15:06:41.975Z
                      description: Golden Sun Bakery
                      balance: 4000
                      amount: 15
        '500':
          description: Not able to fetch transactions
          
  /transactions/{transactionId}:
    get:
      tags:
        - Transaction
      summary: Get transaction data
      description: |-
        Get data of a transaction.
        
        Requires the  transaction ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: transactionId
          required: true
          schema:
            type: string
          description: Transaction ID required
      responses:
        '200':
          description: get transaction data OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: get transaction data OK
                  body:
                    type: object
                    properties:
                      transactionId:
                        type: string
                        example: id
                      date:
                        type: string
                        format: date-time
                        example: 2025-09-01T10:00:00Z
                      description:
                        type: string
                        example: Golden Sun Bakery
                      amount:
                        type: number
                        example: 20.0
                      balance:
                        type: number
                        example: 2000
                      type:
                        type: string
                        example: Electronic
                      category:
                        type: string
                        example: Food
                      notes:
                        type: string
                        example: Croissants
        '404':
          description: Transaction not found

    put:
      tags:
        - Transaction
      summary: Update a transaction
      description: >
        Update transaction data (Category && || Notes).
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: transactionId
          required: true
          schema:
            type: string
          description: Transaction ID required
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                  example: Food
                notes:
                  type: string
                  example: Breakfeast meeting
      responses:
        '200':
          description: Transaction successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Transaction updated successfully
        '404':
          description: Update of transaction failed